@import 'variables';

@mixin absolute-fill() {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

@mixin border-radius($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($values) {
  -moz-box-shadow: $values;
  -webkit-box-shadow: $values;
  box-shadow: $values;
}

@mixin flex($flex-flow, $main-axis, $cross-axis) {
  display: flex;
  flex-flow: $flex-flow;
  justify-content: $main-axis;
  align-items: $cross-axis;
}

@mixin focusActive() {
	outline: var(--outline-width) solid var(--primary-color);
	outline-offset: var(--outline-offset-focus);


}

@mixin focusDefault() {
	outline: var(--outline-width) solid transparent;
	outline-offset: var(--outline-offset-blur);
	transition-property: var(--base-transition-properties);
	transition-duration: var(--animation-timer);
	transition-timing-function: ease-in-out;
}

@mixin MQ($point) {
  @if $point == 'lg' {
    @media only screen and (min-width: $layout-lg-size) {
      @content;
    }
  } @else if $point == 'md' {
    @media only screen and (max-width: $layout-lg-size) {
      @content;
    }
  } @else if $point == 'sm' {
    @media only screen and (max-width: $layout-md-size) {
      @content;
    }
  }
}

@mixin hidden-focusable-button() {
  padding: 0;
  border: 0;
  width: 0;
  height: 0;
  overflow: hidden;
  position: absolute;

  &:focus {
    padding: var(--button-padding);
    width: initial;
    height: initial;
    overflow: initial;
    position: initial;
  }
}
